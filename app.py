import asyncio
from flask import Flask, request, render_template
import requests
# from elementsLookUp import locate_elements
from scanOpenPorts import scanPorts
from attacks import sqli, xss, web_crawl


app = Flask(__name__)
app.jinja_env.filters['is_dict'] = lambda obj: isinstance(obj, dict)


@app.route('/')
def home():
	return render_template('index.html')


@app.route('/test_sql_injection', methods=['POST'])
def test_sql_injection():
	website_url = request.form.get('website')

	try:
		response = sqli(website_url)
	except requests.exceptions.ConnectTimeout:
		response = 'The site you are trying to connect right now is unavailable. Check the site again or try again later.'
		
	return render_template('index.html', result=response)

	# print(f'Locating login elements')
	# username_element, password_element, submit_button, driver = locate_elements(website_url)

	# username_element.send_keys("admin'--")
	# password_element.send_keys('test')
	# submit_button.click()

	# result = 'The provided website is vulnerable to SQL injection.'

	# return result


@app.route('/test_xss', methods=['POST'])
def test_xss():
	website_url = request.form.get('website')
	
	try:
		response = xss(website_url)
	except requests.exceptions.ConnectTimeout:
		response = 'The site you are trying to connect right now is unavailable. Check the site again or try again later.'
	
	return render_template('index.html', result=response)


@app.route('/web_crawling', methods=['POST'])
def web_crawling():
	website_url = request.form.get('website')
	recursive = request.form.get('recursive')

	try:
		response = asyncio.run(web_crawl(website_url, recursive))
	
	except requests.exceptions.ConnectTimeout:
		response = 'The site you are trying to connect right now is unavailable. Check the site again or try again later.'
	
	return render_template('index.html', result=response)


@app.route('/scan_ports', methods=['POST'])
def scan_ports():
	website_url = request.form.get('website')
	response = scanPorts(website_url)
	return render_template('index.html', result=response)


@app.route('/test_sql_injection', methods=['GET'])
@app.route('/scan_ports', methods=['GET'])
@app.route('/test_xss', methods=['GET'])
@app.route('/web_crawling', methods=['GET'])
def fun():
	return "The page you're trying to access is not available."


if __name__ == '__main__':
	app.run(debug=True, port=5500)
